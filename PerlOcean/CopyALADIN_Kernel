#!/usr/bin/perl -w
use strict;
use warnings;

use POSIX qw(ceil floor);

sub round {
    my($number) = shift;
    return int($number + .5);
}
sub fix {
    my($number) = shift;
    if ($number > 0)
    {
	return floor($number);
    }
    else
    {
	return -floor(-$number);
    }
}

sub num2strPerso {
    my($number) = shift;
    my $rndA=round($number);
    if ($rndA < 10)
    {
	return "0".$rndA;
    }
    else
    {
	return $rndA;
    }
}


sub IsBissextile {
    my($number) = shift;
    my $rnd1=round($number/4);
    if (4*$rnd1 eq $number)
    {
	if ($number eq 1900)
	{
	    return 0;
	}
	if ($number eq 2000)
	{
	    return 1;
	}
	if ($number eq 2100)
	{
	    return 0;
	}
	return 1;
    }
    else
    {
	return 0;
    }
}

sub Freduction($$)
{
    my ($val1, $val2) = @_;
    if ($val1 eq "0")
    {
	return $val2;
    }
    else
    {
	return $val1.$val2;
    }
}

sub DateComparison($$)
{
    my ($str1, $str2)=@_;
#    print "str1=".$str1."   str2=".$str2."\n";
    my @SPL1=split("_", $str1);
    my @SU1=split("", $SPL1[0]);
    my $year1=$SU1[0].$SU1[1].$SU1[2].$SU1[3];
    my $month1=Freduction($SU1[4], $SU1[5]);
    my $day1=Freduction($SU1[6], $SU1[7]);
    #
    my @SU1b=split("", $SPL1[1]);
    my $hour1=Freduction($SU1b[0], $SU1b[1]);
    my $minute1=Freduction($SU1b[2], $SU1b[3]);
    my $second1=Freduction($SU1b[4], $SU1b[5]);
#    print "year1=".$year1." month1=".$month1." day1=".$day1." hour1=".$hour1." minute1=".$minute1." second1=".$second1."\n";


    my @SPL2=split("_", $str2);
    my @SU2=split("", $SPL2[0]);
    my $year2=$SU2[0].$SU2[1].$SU2[2].$SU2[3];
    my $month2=Freduction($SU2[4], $SU2[5]);
    my $day2=Freduction($SU2[6], $SU2[7]);
    #
    my @SU2b=split("", $SPL2[1]);
    my $hour2=Freduction($SU2b[0], $SU2b[1]);
    my $minute2=Freduction($SU2b[2], $SU2b[3]);
    my $second2=Freduction($SU2b[4], $SU2b[5]);
#    print "year2=".$year2." month2=".$month2." day2=".$day2." hour2=".$hour2." minute2=".$minute2." second2=".$second2."\n";

#    print "We are here\n";
    if ($year1 < $year2)
    {
	return 1;
    }
    elsif ($year1> $year2)
    {
	return -1;
    }
    if ($month1 < $month2)
    {
	return 1;
    }
    elsif ($month1> $month2)
    {
	return -1;
    }
    if ($day1 < $day2)
    {
	return 1;
    }
    elsif ($day1> $day2)
    {
	return -1;
    }

    if ($hour1 < $hour2)
    {
	return 1;
    }
    elsif ($hour1> $hour2)
    {
	return -1;
    }
    if ($minute1 < $minute2)
    {
	return 1;
    }
    elsif ($minute1> $minute2)
    {
	return -1;
    }
    if ($second1 < $second2)
    {
	return 1;
    }
    elsif ($second1> $second2)
    {
	return -1;
    }
    return 0;
}




sub mjd2date($)
{
    # input should be in days from 1968-05-23 00:00:00 GMT
    my ($nbDay)=@_;
    my $jd=$nbDay+2440000-0.5;
    
    my $ijd=floor($jd + 0.5);
    my $fjd=$jd - $ijd + 0.5;
    
    my $days=$fjd;
    
    my $second = 86400 * $days;
    my $hour   = fix($second/3600);
    $second = $second - 3600*$hour;
    my $minute = fix($second/60);
    $second = $second - 60*$minute;
    
    my $a = $ijd + 32044;
    my $b = floor((4 * $a + 3) / 146097);
    my $c = $a - floor(($b * 146097) / 4);
    
    my $d = floor((4 * $c + 3) / 1461);
    my $e = $c - floor((1461 * $d) / 4);
    my $m = floor((5 * $e + 2) / 153);
    
    my $day   = $e - floor((153 * $m + 2) / 5) + 1;
    my $month = $m + 3 - 12 * floor($m / 10);
    my $year  = $b * 100 + $d - 4800 + floor($m / 10);
    return ($year, $month, $day, $hour, $minute, $second);
}

sub date2mjd($$$$$$)
{
    #copied from matlab script
    my ($year, $month, $day, $hour, $minute, $second)=@_;
    my $a = floor((14 - $month)/12);
    my $y = $year + 4800 - $a;
    my $m = $month + 12*$a - 3;
    my $jd = $day + floor((153*$m + 2)/5) + $y*365 + floor($y/4) - floor($y/100) + floor($y/400) - 32045 + ( $second + 60*$minute + 3600*($hour - 12) )/86400;
    my $mjd=$jd-2400000.5;
    return $mjd;
}

sub persoDate2mjd($$$$$$)
{
    my ($year, $month, $day, $hour, $minute, $second)=@_;
    my $VAL1=date2mjd($year, $month, $day, $hour, $minute, $second);
    my $VAL2=date2mjd(1968, 5, 23,   0, 0, 0);
    my $VAL3=$VAL1-$VAL2;
    return $VAL3;
}





my $uu=scalar(@ARGV);
if ($uu ne 4)
{
    print "Error in CopyALADIN_Kernel\n";
    print "Way to use is\n";
    print "CopyALADIN_Kernel [TimeStart] [TimeEnd] [PrefixIn] [PrefixOut]\n";
    print "TimeStart, TimeEnd are in the form 2015-03-15, etc.\n";
    print "PrefixIn is of the form for example /home/ivica/OPERATIONAL/ALADIN/\n";
    print "PrefixOut if of the form /mnt/KetoData/mathieu/ALADIN/\n";
    die;
}

my $BeginTimeString=$ARGV[0];
my $EndTimeString=$ARGV[1];

my $PrefixI=$ARGV[2];
my $PrefixO=$ARGV[3];




my @U1=split("-", $BeginTimeString);
my $BeginTimeMJD=persoDate2mjd($U1[0], $U1[1], $U1[2], 0, 0, 0);
my @U2=split("-", $EndTimeString);
my $EndTimeMJD=persoDate2mjd($U2[0], $U2[1], $U2[2], 0, 0, 0);
print "BeginTimeMJD=".$BeginTimeMJD." EndTimeMJD=".$EndTimeMJD."\n";

for (my $eDayMJD=$BeginTimeMJD; $eDayMJD<=$EndTimeMJD; $eDayMJD++)
{
    my @DateVect=mjd2date($eDayMJD);
    my $eYear=$DateVect[0];
    my $eMonth=$DateVect[1];
    my $eDay=$DateVect[2];
    my $eStrMonth=num2strPerso($eMonth);
    my $eStrDay=num2strPerso($eDay);
    #
    for (my $iShift=0; $iShift<=72; $iShift++) {
	for (my $iS=0; $iS<2; $iS++) {
	    my $strRES;
	    my $partDir;
	    if ($iS eq 0) {
		$strRES="hr22";
		$partDir="2km";
	    }
	    else {
		$strRES="hr88";
		$partDir="8km";
	    }
	    for (my $iB=0; $iB<2; $iB++)
	    {
		my $strTIM;
		if ($iB eq 0) {
		    $strTIM="00";
		}
		else {
		    $strTIM="12";
		}
		my $strShift=num2strPerso($iShift);
		my $FullFile=$eYear.$eStrMonth.$eStrDay."_".$strTIM."_".$strRES."+".$strShift.".grb";
		my $eFileI=$PrefixI.$eYear."/".$FullFile;
		my $eDirO=$PrefixO.$partDir."/".$eYear."/".$eStrMonth."/";
		my $eFileO=$eDirO.$FullFile;
		#
		if (-e $eFileO) {
		    print "File ".$eFileO." already exist\n";
		}
		else {
		    if (-e $eFileI) {
			my $order;
			$order="mkdir -p ".$eDirO;
			print $order."\n";
			if (system($order) != 0) {
			    die "Error in mkdir command\n";
			}
			#
			$order="cp ".$eFileI." ".$eFileO;
			print $order."\n";
			if (system($order) != 0) {
			    die "Error in mkdir command\n";
			}
		    }
		}
	    }
	}
    }
}
