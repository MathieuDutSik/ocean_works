#!/usr/bin/perl -w
use strict;
use warnings;

# We have one set of extreme ray and one set of facets
# we determine which are incident to the first term of
# the list
# NOTE that we can interchange the role of extreme ray and
# facets as usual.

my $uu=scalar(@ARGV);

if ($uu ne 4)
{
    print "Error in DownloadNEMO_Kernel\n";
    print "Way to use is\n";
    print "DownloadNEMO_Kernel [TimeStart] [TimeEnd] [FileName] [opt]\n";
    print "TimeStart, TimeEnd are in the form 2015-03-15, etc.\n";
    print "FileName should be without .nc at the end\n";
    print "Then the files FileName_cur.nc, FileName_ssh.nc, FileName_tem.nc, FileName_sal.nc are created\n";
    print "Possible options:\n";
    print "opt=1 : Otranto\n";
    print "opt=2 : Adriatic Sea\n";
    die;
}

my $strBegin="\"".$ARGV[0]." 00:00:00\"";
my $strEnd="\"".$ARGV[1]." 00:00:00\"";
my $FinalFile=$ARGV[2];
my $opt=$ARGV[3];

my $comm1="python \$MOTU_PATH/motu-client.py";
my $userpass=" --user mdutoursikiric --pwd MathieuCMEMS2016";
my $httplink=" --motu http://nrt.cmems-du.eu/motu-web/Motu --service-id MEDSEA_ANALYSIS_FORECAST_PHY_006_013-TDS";

my @ListVar=(" --product-id sv04-med-ingv-cur-an-fc-h --variable uo --variable vo",
	     " --product-id sv04-med-ingv-tem-an-fc-h --variable thetao",
	     " --product-id sv04-med-ingv-sal-an-fc-h --variable so",
	     " --product-id sv04-med-ingv-ssh-an-fc-h --variable zos");

my @ListEnding=("cur", "tem", "sal", "ssh");

my $strGeo;
if ($opt eq 1)
{
    $strGeo=" --longitude-min 18 --longitude-max 20 --latitude-min 40 --latitude-max 41";
}
if ($opt eq 2)
{
    $strGeo=" --longitude-min 12 --longitude-max 20 --latitude-min 40 --latitude-max 45.85";
}

my $strTime=" --date-min ".$strBegin." --date-max ".$strEnd;

my $strVert=" --depth-max 1250.000 --depth-min 1.0";

my @U=split("", $FinalFile);
my $iCharLast=-1;
for (my $iChar=0; $iChar<scalar(@U); $iChar++)
{
    if ($U[$iChar] eq "/")
    {
	$iCharLast=$iChar;
    }
}

my $strDir="";
for (my $iChar=0; $iChar<=$iCharLast; $iChar++)
{
    $strDir=$strDir.$U[$iChar];
}

my $strFile="";
for (my $iChar=$iCharLast+1; $iChar<scalar(@U); $iChar++)
{
    $strFile=$strFile.$U[$iChar];
}





my $nbVar=scalar(@ListVar);
for (my $iVar=0; $iVar<$nbVar; $iVar++)
{
    my $strEnd=$ListEnding[$iVar];
    my $eFileFinal=$strFile."_".$strEnd.".nc";
    my $eFileTot=$strDir.$eFileFinal;
    if (-e $eFileTot) {
	print "File eFileTot=".$eFileTot." already exist\n";
    }
    else {
	my $strOut=" --out-dir \"".$strDir."\" --out-name \"".$eFileFinal."\"";
	my $order=$comm1.$userpass.$httplink.$strGeo.$strTime.$strVert.$ListVar[$iVar].$strOut;
	print "order=".$order."\n";
	if (system($order) != 0) {
	    print "Error in python call\n";
	}
    }
}

	  

