#PROGRAM = CHECK_HYCOM
#PROGRAM = MEAS_AltimeterComparison
#PROGRAM = MEAS_AquaOperation
#PROGRAM = MEAS_SST_Comparison
#PROGRAM = MEAS_CTD_Comparison
#PROGRAM = DATA_MergeField
#PROGRAM = DATA_AverageField
#PROGRAM = DATA_ComputeRomsDensity
#PROGRAM = PLOT_float
#PROGRAM = PLOT_transect
#PROGRAM = PLOT_results
#PROGRAM = PLOT_buoy
#PROGRAM = PLOT_PointOutput
#PROGRAM = PLOT_grid
#PROGRAM = PLOT_diff_results
#PROGRAM = PLOT_bound
#PROGRAM = GRID_ConvertGrid
#PROGRAM = GRID_ShowGridInformation
 PROGRAM = GRID_CompGridTimeStepCFL
#PROGRAM = GRIB_FindDisturbanceSequence
#PROGRAM = GRID_ScaleXYgrid
#PROGRAM = GRID_SetStraightLine
#PROGRAM = GRIB_PrintSequenceFiles
#PROGRAM = RIVER_MakeRiverFile
#PROGRAM = RIVER_PlotRiverOnGrid
#PROGRAM = RIVER_ShowRiver
#PROGRAM = RIVER_MakeRiverFile RIVER_PlotRiverOnGrid RIVER_MergeRiverFiles RIVER_ShowRiver
#PROGRAM = RIVER_PlotRiverOnGrid
#PROGRAM = ROMS_SetTracerInitial
#PROGRAM = ROMS_SetTime
#PROGRAM = GRID_CompGridTimeStepCFL
#PROGRAM = ROMS_VerticalStratification_Diagnostics
#PROGRAM = ROMS_SetTimeRomsInitial
#PROGRAM = ROMS_CreateDefaultSetting
#PROGRAM = PLOT_results PLOT_transect
#PROGRAM = SHP_GetShapeType

FILE_F90 = WW3_minimalroutine


OBJECTS		= $(PROGRAM:%=%.o)

OBJECTS_F90     = $(FILE_F90:%=%.o)


#CC		= icpc -std=c++17 -Wall -g -O2
#CC              = clang++ -Weverything -std=c++17 -g
 CC		= g++ -std=c++17 -Wall -g -O2
#CC		= g++ -std=c++17 -Wall -g -O2 -fsanitize=address -fsanitize=undefined -fsanitize=bool -fsanitize=bounds -fstack-protector-all
#CC		= g++ -std=c++17 -Wall -g -O2 -fsanitize=address -fsanitize=pointer-subtract -fsanitize=undefined -fsanitize=null -fsanitize=bounds -fsanitize=bounds-strict -fsanitize=alignment -fsanitize=leak -Wstrict-aliasing
#CC		= g++ -std=c++17 -Wall -g -fsanitize=address -fsanitize=pointer-subtract -fsanitize=undefined -fsanitize=null -fsanitize=bounds -fsanitize=bounds-strict -fsanitize=alignment -fsanitize=leak -Wstrict-aliasing
#CC		= $(STANDARD_CPP_CXX) -std=c++17 -Wall -g -O2


#FC		= gfortran -Wall -g -O1
#FC		= ifort -traceback -O1 -g -assume byterecl -convert big_endian
#FC		= gfortran -Wall -g -O1 -fno-underscoring
FC		= $(STANDARD_FORTRAN_FC)

NOLINKFLAG 	= -c
OUTPUTFLAG 	= -o

CLOCAL          = -I../src_basic -I../src_number -I../src_matrix -I../src_comb -I../src_graph -I../src_svg

# Not clear why, but we need GMP at linking stage (thought not at compiling)

CFLAGS 		= -I$(GMP_INCDIR) -I$(EIGEN_PATH) $(NETCDF_CXX_ALLINC) $(GRIB_INCDIR) $(SHAPELIB_INCLUDE) -I$(BOOST_INCDIR) $(OPENCV_KDTREE_INCLUDE)
LIBS		= -lm -lpthread $(GMP_CXX_LINK) $(STANDARD_FORTRAN_LIBS) $(NETCDF_CXX_LINK) $(GRIB_C_LINK) $(SHAPELIB_LINK) $(OPENCV_KDTREE_LINK) $(FORTRAN_LINK)

%.o: %.cpp
	@echo
	@echo compile $<
	$(CC) $(OUTPUTFLAG) $@ $(CLOCAL) $(CFLAGS) $(NOLINKFLAG) $<

%.o: %.F90
	@echo
	@echo compile $<
	$(FC) $(OUTPUTFLAG) $@ $(CLOCAL) $(CFLAGS) $(NOLINKFLAG) $<

all:	$(PROGRAM)

$(PROGRAM): 	$(OBJECTS) $(OBJECTS_F90)
		@echo
		@echo link $@
		$(CC) $(DEBUGFLAG) $@.o $(OBJECTS_F90) $(LIBS) -o $@

clean:;
	rm -f *.o
	rm -f $(PROGRAM)
